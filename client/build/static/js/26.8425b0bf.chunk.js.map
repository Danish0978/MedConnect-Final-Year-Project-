{"version":3,"file":"static/js/26.8425b0bf.chunk.js","mappings":"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","sources":["pages/PharmacySales.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { FaShoppingCart, FaPrint, FaHome } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Loading from \"../components/Loading\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"../styles/pharmacySales.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nconst getCartStorageKey = (userId) => `pharmacy_cart_${userId || 'guest'}`;\r\n\r\nconst PharmacySales = () => {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [discount, setDiscount] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [pharmacyId, setPharmacyId] = useState(null);\r\n  const [showCheckoutForm, setShowCheckoutForm] = useState(false);\r\n  const [showReceipt, setShowReceipt] = useState(false);\r\n  const [orderDetails, setOrderDetails] = useState(null);\r\n  const [shippingInfo, setShippingInfo] = useState({\r\n    name: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    notes: \"\"\r\n  });\r\n  \r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Initialize user and fetch data\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const initializeData = async () => {\r\n      try {\r\n        if (token) {\r\n          const decoded = jwt_decode(token);\r\n          setUser(decoded);\r\n          \r\n          const userCartKey = getCartStorageKey(decoded.userId);\r\n          const savedCart = localStorage.getItem(userCartKey);\r\n          if (savedCart) {\r\n            try {\r\n              setCart(JSON.parse(savedCart));\r\n            } catch (error) {\r\n              localStorage.removeItem(userCartKey);\r\n            }\r\n          }\r\n\r\n          if (decoded.isPharmacyReceptionist) {\r\n            await fetchPharmacyData(token);\r\n          } else {\r\n            await fetchAllMedicines(token);\r\n          }\r\n        } else {\r\n          setUser({ isPharmacyReceptionist: false, userId: null });\r\n          const guestCartKey = getCartStorageKey();\r\n          const savedCart = localStorage.getItem(guestCartKey);\r\n          if (savedCart) {\r\n            try {\r\n              setCart(JSON.parse(savedCart));\r\n            } catch (error) {\r\n              localStorage.removeItem(guestCartKey);\r\n            }\r\n          }\r\n          await fetchAllMedicines();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Initialization error:\", error);\r\n        setUser({ isPharmacyReceptionist: false, userId: null });\r\n        setMedicines([]);\r\n      }\r\n    };\r\n\r\n    initializeData();\r\n  }, []);\r\n\r\n  // Save cart to storage\r\n  useEffect(() => {\r\n    if (user) {\r\n      const cartKey = getCartStorageKey(user.userId);\r\n      localStorage.setItem(cartKey, JSON.stringify(cart));\r\n    }\r\n  }, [cart, user]);\r\n\r\n  const fetchPharmacyData = async (token) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const response = await axios.get(\"/pharmacy/my-pharmacy\", {\r\n        headers: { authorization: `Bearer ${token}` }\r\n      });\r\n      setPharmacyId(response.data?.pharmacyId || null);\r\n      await fetchPharmacyMedicines(token, response.data.pharmacyId);\r\n    } catch (error) {\r\n      console.error(\"Pharmacy data error:\", error);\r\n      toast.error(\"Failed to fetch pharmacy data\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const fetchPharmacyMedicines = async (token, pharmacyId) => {\r\n    try {\r\n      console.log(`Fetching medicines for pharmacy ${pharmacyId}`);\r\n      const response = await axios.get(`/medicine/all/${pharmacyId}`, {\r\n        headers: { authorization: `Bearer ${token}` }\r\n      });\r\n      console.log(\"Pharmacy medicines response:\", response.data);\r\n      if (response.data.success) {\r\n        setMedicines(response.data.data);\r\n      }\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      console.error(\"Error fetching pharmacy medicines:\", error);\r\n      toast.error(\"Failed to fetch pharmacy medicines\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n  \r\n  const fetchAllMedicines = async (token) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const config = token ? { headers: { authorization: `Bearer ${token}` }} : {};\r\n      const response = await axios.get(\"/medicine/all\", config);\r\n      \r\n      // FIXED: Access response.data.data instead of response.data.medicines\r\n      if (response.data?.success && Array.isArray(response.data.data)) {\r\n        setMedicines(response.data.data); // Changed from response.data.medicines\r\n      } else {\r\n        setMedicines([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch error:\", error);\r\n      setMedicines([]);\r\n      toast.error(\"Failed to load medicines\");\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n  \r\n  // Also update the filteredMedicines function to handle the data structure:\r\n  const filteredMedicines = (medicines || []).filter(medicine => {\r\n    if (!medicine || !medicine.name) return false;\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      medicine.name.toLowerCase().includes(searchLower) ||\r\n      (medicine.genericName && medicine.genericName.toLowerCase().includes(searchLower))\r\n    );\r\n  });\r\n  \r\n  // Cart functions with proper null checks\r\n  const addToCart = (medicine) => {\r\n    if (!medicine) return;\r\n    \r\n    if (!user?.isPharmacyReceptionist && medicine.prescriptionRequired) {\r\n      toast.error(\"This medicine requires a prescription\");\r\n      return;\r\n    }\r\n    \r\n    const existingItem = cart.find(item => item._id === medicine._id);\r\n    let updatedCart;\r\n    \r\n    if (existingItem) {\r\n      if (existingItem.quantity >= (medicine.quantity || 0)) {\r\n        toast.error(\"Cannot add more than available stock\");\r\n        return;\r\n      }\r\n      updatedCart = cart.map(item =>\r\n        item._id === medicine._id ? { ...item, quantity: item.quantity + 1 } : item\r\n      );\r\n    } else {\r\n      updatedCart = [...cart, { ...medicine, quantity: 1 }];\r\n    }\r\n    \r\n    setCart(updatedCart);\r\n    toast.success(`${medicine.name} added to cart`);\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    setCart(cart.filter(item => item._id !== id));\r\n    toast.success(\"Item removed from cart\");\r\n  };\r\n\r\n  const updateQuantity = (id, newQuantity) => {\r\n    const medicine = medicines.find(m => m?._id === id);\r\n    if (!medicine) return;\r\n    \r\n    if (newQuantity > (medicine.quantity || 0)) {\r\n      toast.error(`Only ${medicine.quantity} available in stock`);\r\n      return;\r\n    }\r\n    \r\n    if (newQuantity < 1) {\r\n      removeFromCart(id);\r\n      return;\r\n    }\r\n    \r\n    setCart(cart.map(item =>\r\n      item._id === id ? { ...item, quantity: newQuantity } : item\r\n    ));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    const cartKey = getCartStorageKey(user?.userId);\r\n    localStorage.removeItem(cartKey);\r\n  };\r\n\r\n  // Order calculations\r\n  const calculateSubtotal = () => cart.reduce((total, item) => total + ((item.price || 0) * (item.quantity || 0)), 0);\r\n  const calculateTotal = () => calculateSubtotal() - (calculateSubtotal() * (discount / 100));\r\n\r\n  // Checkout handlers\r\n  const handleCheckout = async () => {\r\n    if (user?.isPharmacyReceptionist) {\r\n      await processOrder();\r\n    } else {\r\n      setShowCheckoutForm(true);\r\n    }\r\n  };\r\n\r\n  const processOrder = async (shippingData = null) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token && !user?.isPharmacyReceptionist) {\r\n        toast.error(\"You need to be logged in to checkout\");\r\n        dispatch(setLoading(false));\r\n        return;\r\n      }\r\n  \r\n      const orderData = {\r\n        items: cart.map(item => ({\r\n          medicineId: item._id,\r\n          quantity: item.quantity,\r\n          price: item.price\r\n        })),\r\n        totalAmount: calculateTotal(),\r\n        ...(user?.isPharmacyReceptionist && { \r\n          discount,\r\n          pharmacyId: pharmacyId \r\n        }),\r\n        ...(!user?.isPharmacyReceptionist && { \r\n          shippingInfo: shippingData,\r\n          patientId: user?.userId \r\n        })\r\n      };\r\n  \r\n      const response = await axios.post(\"/order/\", orderData, {\r\n        headers: { authorization: `Bearer ${token}` }\r\n      });\r\n  \r\n      if (response.data?.success) {\r\n        setOrderDetails({\r\n          ...response.data,\r\n          // For backward compatibility with single order view\r\n          order: response.data.orders?.[0] || response.data.order\r\n        });\r\n        setShowReceipt(true);\r\n        setShowCheckoutForm(false);\r\n        clearCart();\r\n        setDiscount(0);\r\n      }\r\n      dispatch(setLoading(false));\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"Failed to place order\");\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    processOrder(shippingInfo);\r\n  };\r\n\r\n  const printReceipt = () => {\r\n    const printContent = document.getElementById('receipt-print');\r\n    const printWindow = window.open('', '', 'width=800,height=600');\r\n    \r\n    printWindow.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>MedConnect Receipt</title>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; margin: 0; padding: 20px; }\r\n            .print-header { text-align: center; margin-bottom: 20px; }\r\n            .print-header h1 { color: #2c7be5; margin: 0; }\r\n            .print-header p { margin: 5px 0; color: #666; }\r\n            table { width: 100%; border-collapse: collapse; margin: 20px 0; }\r\n            th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }\r\n            .total-row { display: flex; justify-content: space-between; margin: 5px 0; }\r\n            .grand-total { font-weight: bold; font-size: 1.1em; margin-top: 10px; }\r\n            @media print {\r\n              body { padding: 0; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"print-header\">\r\n            <h1>MedConnect</h1>\r\n            <p>Medical Order Receipt</p>\r\n          </div>\r\n          <div id=\"receipt-content\">\r\n            ${printContent.innerHTML}\r\n          </div>\r\n          <script>\r\n            window.onload = function() {\r\n              setTimeout(() => {\r\n                window.print();\r\n                window.close();\r\n              }, 200);\r\n            }\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `);\r\n    printWindow.document.close();\r\n  };\r\n \r\n\r\n  // Receipt View\r\n  // Receipt View\r\nif (showReceipt && orderDetails) {\r\n    const ordersToDisplay = orderDetails.orders || [orderDetails.order];\r\n    const isMultiPharmacy = orderDetails.isMultiPharmacy;\r\n  \r\n    return (\r\n      <div className=\"pharmacy-sales-container\">\r\n        <Navbar />\r\n        <div className=\"receipt-container\">\r\n          <div className=\"receipt\" id=\"receipt-print\">\r\n            <h2>Order Confirmation</h2>\r\n            {isMultiPharmacy && (\r\n              <div className=\"multi-order-notice\">\r\n                <p>Your order contains items from multiple pharmacies and has been split into separate orders:</p>\r\n                <p className=\"order-numbers\">Order Numbers: {orderDetails.orderNumbers}</p>\r\n              </div>\r\n            )}\r\n            \r\n            {ordersToDisplay.map((order, orderIndex) => (\r\n              <div key={orderIndex} className=\"order-receipt\">\r\n                <div className=\"receipt-header\">\r\n                  <p>Order #: {order.orderNumber}</p>\r\n                  <p>Date: {new Date(order.createdAt).toLocaleString()}</p>\r\n                  {order.pharmacy && (\r\n                    <div className=\"pharmacy-info\">\r\n                      <h4>Pharmacy: {order.pharmacy.name}</h4>\r\n                      <p>{order.pharmacy.address}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"receipt-body\">\r\n                  {order.orderType === \"online\" && order.shippingInfo && (\r\n                    <div className=\"shipping-info\">\r\n                      <h3>Shipping Information</h3>\r\n                      <p>Name: {order.shippingInfo.name}</p>\r\n                      <p>Address: {order.shippingInfo.address}</p>\r\n                      <p>City: {order.shippingInfo.city}</p>\r\n                      <p>Phone: {order.shippingInfo.phone}</p>\r\n                      {order.shippingInfo.notes && (\r\n                        <p>Notes: {order.shippingInfo.notes}</p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"order-items\">\r\n                    <h3>Order Summary</h3>\r\n                    <table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Item</th>\r\n                          <th>Qty</th>\r\n                          <th>Price</th>\r\n                          <th>Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {order.items?.map((item, index) => (\r\n                          <tr key={index}>\r\n                            <td>{item.medicineId?.name}</td>\r\n                            <td>{item.quantity}</td>\r\n                            <td>Rs. {item.price?.toFixed(2)}</td>\r\n                            <td>Rs. {(item.price * item.quantity).toFixed(2)}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  \r\n                  <div className=\"order-total\">\r\n                    <div className=\"total-row\">\r\n                      <span>Subtotal:</span>\r\n                      <span>Rs. {order.subTotal?.toFixed(2)}</span>\r\n                    </div>\r\n                    {order.discount > 0 && (\r\n                      <div className=\"total-row\">\r\n                        <span>Discount ({order.discount}%):</span>\r\n                        <span>- Rs. {(order.subTotal * order.discount/100).toFixed(2)}</span>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"total-row grand-total\">\r\n                      <span>Total:</span>\r\n                      <span>Rs. {order.totalAmount?.toFixed(2)}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            <div className=\"receipt-actions\">\r\n              <button onClick={printReceipt} className=\"print-btn\">\r\n                <FaPrint /> Print Receipt\r\n              </button>\r\n              <button \r\n                onClick={() => {\r\n                  setShowReceipt(false);\r\n                  setOrderDetails(null);\r\n                }} \r\n                className=\"home-btn\"\r\n              >\r\n                <FaHome /> Back to Home\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Checkout Form View\r\n  if (showCheckoutForm) {\r\n    return (\r\n      <div className=\"pharmacy-sales-container\">\r\n        <Navbar />\r\n        <div className=\"checkout-form-container\">\r\n          <form onSubmit={handleFormSubmit} className=\"checkout-form\">\r\n            <h2>Shipping Information</h2>\r\n            <div className=\"form-group\">\r\n              <label>Full Name *</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                value={shippingInfo.name}\r\n                onChange={(e) => setShippingInfo({...shippingInfo, name: e.target.value})}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Address *</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                value={shippingInfo.address}\r\n                onChange={(e) => setShippingInfo({...shippingInfo, address: e.target.value})}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>City *</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                value={shippingInfo.city}\r\n                onChange={(e) => setShippingInfo({...shippingInfo, city: e.target.value})}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Phone Number *</label>\r\n              <input\r\n                type=\"tel\"\r\n                required\r\n                value={shippingInfo.phone}\r\n                onChange={(e) => setShippingInfo({...shippingInfo, phone: e.target.value})}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Notes (Optional)</label>\r\n              <textarea\r\n                value={shippingInfo.notes}\r\n                onChange={(e) => setShippingInfo({...shippingInfo, notes: e.target.value})}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"order-summary\">\r\n              <h3>Order Summary</h3>\r\n              {cart.map(item => (\r\n                <div key={item._id} className=\"order-item\">\r\n                  <span>{item.name} x {item.quantity}</span>\r\n                  <span>Rs. {(item.price * item.quantity).toFixed(2)}</span>\r\n                </div>\r\n              ))}\r\n              <div className=\"order-total\">\r\n                <span>Total:</span>\r\n                <span>Rs. {calculateSubtotal().toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-actions\">\r\n              <button \r\n                type=\"button\" \r\n                onClick={() => setShowCheckoutForm(false)}\r\n                className=\"cancel-btn\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Place Order\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main Pharmacy View\r\n  return (\r\n    <div className=\"pharmacy-sales-container\">\r\n      <Navbar />\r\n      <div className=\"pharmacy-content\">\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <main className=\"pharmacy-main\">\r\n            <h2 className=\"pharmacy-title\">\r\n              {user?.isPharmacyReceptionist ? \"Pharmacy Inventory\" : \"Pharmacy Store\"}\r\n            </h2>\r\n            \r\n            <div className=\"search-controls\">\r\n              <div className=\"search-input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"🔍 Search medicines by name or generic name...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"pharmacy-layout\">\r\n              <div className=\"medicine-list-section\">\r\n                <div className=\"table-header\">\r\n                  <h3>Available Medicines</h3>\r\n                  <span className=\"results-count\">{filteredMedicines.length} items found</span>\r\n                </div>\r\n                \r\n                <div className=\"table-container\">\r\n                  <table className=\"medicines-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Generic Name</th>\r\n                        <th>Formula</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Dosage</th>\r\n                        {user?.isPharmacyReceptionist && <th>Stock</th>}\r\n                        <th>Price</th>\r\n                        {!user?.isPharmacyReceptionist && <th>Pharmacy</th>}\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {filteredMedicines.length > 0 ? (\r\n                        filteredMedicines.map(medicine => (\r\n                          medicine && (\r\n                            <tr key={medicine._id} className={(medicine.quantity || 0) <= 0 ? \"out-of-stock\" : \"\"}>\r\n                              <td>\r\n                                <div className=\"medicine-name\">\r\n                                  {medicine.name}\r\n                                  {medicine.prescriptionRequired && (\r\n                                    <span className=\"prescription-badge\">Rx</span>\r\n                                  )}\r\n                                </div>\r\n                              </td>\r\n                              <td>{medicine.genericName || '-'}</td>\r\n                              <td>{medicine.formula || '-'}</td>\r\n                              <td>{medicine.manufacturer || '-'}</td>\r\n                              <td>{medicine.dosage || '-'}</td>\r\n                              {user?.isPharmacyReceptionist && (\r\n                                <td>\r\n                                  <span className={`stock-badge ${(medicine.quantity || 0) <= 0 ? 'out' : (medicine.quantity || 0) <= 10 ? 'low' : 'in'}`}>\r\n                                    {(medicine.quantity || 0) <= 0 ? 'Out of stock' : medicine.quantity}\r\n                                  </span>\r\n                                </td>\r\n                              )}\r\n                              <td>Rs. {medicine.price?.toFixed(2) || '0.00'}</td>\r\n                              {!user?.isPharmacyReceptionist && (\r\n                                <td className=\"pharmacy-info\">\r\n                                  {medicine.pharmacyId && (\r\n                                    <>\r\n                                      <div className=\"pharmacy-name\">{medicine.pharmacyId.name}</div>\r\n                                      <div className=\"pharmacy-address\">{medicine.pharmacyId.address}</div>\r\n                                    </>\r\n                                  )}\r\n                                </td>\r\n                              )}\r\n                              <td>\r\n                                <button \r\n                                  className={`add-to-cart-btn ${!user?.isPharmacyReceptionist && medicine.prescriptionRequired ? \"disabled\" : \"\"}`}\r\n                                  onClick={() => addToCart(medicine)}\r\n                                  disabled={(medicine.quantity || 0) <= 0 || (!user?.isPharmacyReceptionist && medicine.prescriptionRequired)}\r\n                                >\r\n                                  {(medicine.quantity || 0) <= 0 ? \"Out of stock\" :\r\n                                   !user?.isPharmacyReceptionist && medicine.prescriptionRequired \r\n                                    ? \"Prescription Required\" \r\n                                    : \"Add to Cart\"}\r\n                                </button>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        ))\r\n                      ) : (\r\n                        <tr className=\"no-results\">\r\n                          <td colSpan={!user?.isPharmacyReceptionist ? 8 : 7}>\r\n                            No medicines found matching your criteria\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"cart-section\">\r\n                <div className=\"cart-card\">\r\n                  <h3 className=\"cart-title\">Your Cart ({cart.length})</h3>\r\n                  \r\n                  {cart.length > 0 ? (\r\n                    <>\r\n                      <div className=\"cart-items-list\">\r\n                        {cart.map(item => {\r\n                          const medicine = medicines.find(m => m?._id === item?._id);\r\n                          return (\r\n                            <div key={item._id} className=\"cart-item\">\r\n                              <div className=\"cart-item-info\">\r\n                                <span className=\"item-name\">{item.name}</span>\r\n                                <span className=\"item-price\">Rs. {item.price?.toFixed(2)}</span>\r\n                              </div>\r\n                              <div className=\"item-controls\">\r\n                                <div className=\"quantity-adjuster\">\r\n                                  <button \r\n                                    className=\"quantity-btn minus\"\r\n                                    onClick={() => updateQuantity(item._id, (item.quantity || 0) - 1)}\r\n                                  >\r\n                                    -\r\n                                  </button>\r\n                                  <span className=\"quantity\">{item.quantity}</span>\r\n                                  <button \r\n                                    className=\"quantity-btn plus\"\r\n                                    onClick={() => updateQuantity(item._id, (item.quantity || 0) + 1)}\r\n                                    disabled={(item.quantity || 0) >= (medicine?.quantity || 0)}\r\n                                  >\r\n                                    +\r\n                                  </button>\r\n                                </div>\r\n                                <button \r\n                                  className=\"remove-item-btn\"\r\n                                  onClick={() => removeFromCart(item._id)}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      \r\n                      <div className=\"cart-summary\">\r\n                        <div className=\"summary-row\">\r\n                          <span>Subtotal:</span>\r\n                          <span>Rs. {calculateSubtotal().toFixed(2)}</span>\r\n                        </div>\r\n                        \r\n                        {user?.isPharmacyReceptionist && (\r\n                          <div className=\"summary-row discount-row\">\r\n                            <label>Discount:</label>\r\n                            <div className=\"discount-input-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                max=\"100\"\r\n                                value={discount}\r\n                                onChange={(e) => {\r\n                                  const value = Math.min(100, Math.max(0, Number(e.target.value)));\r\n                                  setDiscount(value);\r\n                                }}\r\n                                placeholder=\"0\"\r\n                              />\r\n                              <span>%</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        <div className=\"summary-row total-row\">\r\n                          <span>Total:</span>\r\n                          <span className=\"total-amount\">\r\n                            Rs. {user?.isPharmacyReceptionist \r\n                              ? calculateTotal().toFixed(2) \r\n                              : calculateSubtotal().toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        <button \r\n                          className=\"checkout-btn\"\r\n                          onClick={handleCheckout}\r\n                        >\r\n                          {user?.isPharmacyReceptionist ? \"Checkout\" : \"Proceed to Checkout\"}\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"empty-cart\">\r\n                      <FaShoppingCart className=\"empty-cart-icon\" size={48} />\r\n                      <p>Your cart is empty</p>\r\n                      <small>Add medicines from the list</small>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PharmacySales;"],"names":["axios","defaults","baseURL","process","getCartStorageKey","userId","PharmacySales","medicines","setMedicines","useState","cart","setCart","discount","setDiscount","searchTerm","setSearchTerm","pharmacyId","setPharmacyId","showCheckoutForm","setShowCheckoutForm","showReceipt","setShowReceipt","orderDetails","setOrderDetails","shippingInfo","setShippingInfo","name","address","city","phone","notes","dispatch","useDispatch","loading","useSelector","state","root","user","setUser","useEffect","token","localStorage","getItem","async","decoded","jwt_decode","userCartKey","savedCart","JSON","parse","error","removeItem","isPharmacyReceptionist","fetchPharmacyData","fetchAllMedicines","guestCartKey","console","initializeData","cartKey","setItem","stringify","_response$data","setLoading","response","get","headers","authorization","data","fetchPharmacyMedicines","toast","log","success","_response$data2","config","Array","isArray","filteredMedicines","filter","medicine","searchLower","toLowerCase","includes","genericName","removeFromCart","id","item","_id","updateQuantity","newQuantity","find","m","quantity","map","calculateSubtotal","reduce","total","price","calculateTotal","processOrder","shippingData","arguments","length","undefined","_response$data3","orderData","items","medicineId","totalAmount","patientId","post","_response$data$orders","order","orders","clearCart","_error$response","_error$response$data","message","handleFormSubmit","e","preventDefault","printReceipt","printContent","document","getElementById","printWindow","window","open","write","innerHTML","close","ordersToDisplay","isMultiPharmacy","_jsxs","className","children","_jsx","Navbar","orderNumbers","orderIndex","_order$items","_order$subTotal","_order$totalAmount","orderNumber","Date","createdAt","toLocaleString","pharmacy","orderType","index","_item$medicineId","_item$price","toFixed","subTotal","onClick","FaPrint","FaHome","Footer","onSubmit","type","required","value","onChange","target","Loading","placeholder","_medicine$price","prescriptionRequired","formula","manufacturer","dosage","_Fragment","existingItem","updatedCart","addToCart","disabled","colSpan","_item$price2","min","max","Math","Number","FaShoppingCart","size"],"sourceRoot":""}