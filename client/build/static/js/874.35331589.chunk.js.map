{"version":3,"file":"static/js/874.35331589.chunk.js","mappings":"8OAWA,MA4HA,EA5HkBA,KAChB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KACtCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAC7BO,GAAWC,EAAAA,EAAAA,OACX,QAAEC,IAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC1CC,IAAQb,EAAAA,EAAAA,UACbc,aAAaC,QAAQ,UACjBC,EAAAA,EAAAA,GAAWF,aAAaC,QAAQ,UAChC,OAsBNE,EAAAA,EAAAA,YAAU,KAnBWC,WACnB,IACEX,GAASY,EAAAA,EAAAA,KAAW,IACpB,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,kBAAmB,CAClDC,QAAS,CACPC,cAAe,UAAUV,aAAaC,QAAQ,cAGlDhB,GAAe,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,OAAQ,IACzBlB,GAAuB,OAAJkB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,OAAQ,IACjCd,EAAS,KACX,CAAE,MAAOD,GACPoB,QAAQpB,MAAM,0BAA2BA,GACzCC,EAAS,yBACX,CAAC,QACCC,GAASY,EAAAA,EAAAA,KAAW,GACtB,GAGgBO,EAAc,GAAK,KAErCT,EAAAA,EAAAA,YAAU,KACR,GAAInB,EAAQ6B,OAAS,EAAG,CACtB,MAAMC,EAAe,OAAJf,QAAI,IAAJA,GAAAA,EAAMgB,SACnB/B,EAAQgC,QAAOC,IAAM,IAAAC,EAAA,MACnB,IAAiB,QAAdA,EAAAD,EAAOE,eAAO,IAAAD,OAAA,EAAdA,EAAgBE,OAAQ,KAAKC,cAAcC,SAASjC,EAAWgC,cAAc,IAElFrC,EACJI,EAAmB0B,EACrB,IACC,CAACzB,EAAYL,EAAa,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,WAoB/B,OAAIpB,GAAgB4B,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KAG1BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEJ,EAAAA,EAAAA,KAACK,EAAAA,EAAM,KACPH,EAAAA,EAAAA,MAAA,OAAKI,UAAU,+BAA8BF,SAAA,EAC3CJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,eAAcF,SAAC,uBAExB,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,YACLQ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYF,UACzBJ,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,YAAY,4BACZC,MAAO3C,EACP4C,SAAWC,GAAM5C,EAAc4C,EAAEC,OAAOH,WAK7CzC,GACCgC,EAAAA,EAAAA,KAAA,KAAGM,UAAU,gBAAeF,SAAEpC,IAC5BJ,EAAgB0B,OAAS,GAC3BU,EAAAA,EAAAA,KAAA,OAAKM,UAAU,qBAAoBF,SAChCxC,EAAgBiD,KAAKnB,IAAM,IAAAoB,EAAAC,EAzCdC,EAyCc,OAC1Bd,EAAAA,EAAAA,MAAA,OAAsBI,UAAU,oBAAmBF,SAAA,EACjDJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,eAAcF,SACT,aAAhBV,EAAOa,KAAsB,2BAA6B,wBAG7DL,EAAAA,EAAAA,MAAA,OAAKI,UAAU,gBAAeF,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,UAAc,IAAEV,EAAOuB,KAAK,OAAKvB,EAAOwB,SACnDhB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,gBAAoB,KAAuB,IAApBV,EAAOyB,YAAkBC,QAAQ,GAAG,QACtElB,EAAAA,EAAAA,MAAA,KAAGI,UAAW,UAAUZ,EAAO2B,mBAAmBjB,SAAA,EAChDJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,gBAAoB,IAA8B,IAA5BV,EAAO2B,iBAAyB,WAAa,kBAI1E,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,WAAYE,EAAOE,UACxBM,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcF,SAAA,EAC3BJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,qBACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,UAAc,IAAEV,EAAOE,QAAQC,SAC1CK,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,WAAe,KAAwB,QAAtBU,EAAApB,EAAOE,QAAQ0B,eAAO,IAAAR,OAAA,EAAtBA,EAAwBS,QAAS,mBAC7DrB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,WAAe,KAAwB,QAAtBW,EAAArB,EAAOE,QAAQ0B,eAAO,IAAAP,OAAA,EAAtBA,EAAwBS,QAAS,sBA5DvDR,EAgEMtB,EAAOsB,SA/D9BA,GAGHd,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,yBACJJ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,gBAAeF,SAC3BqB,OAAOC,QAAQV,GAAUH,KAAIc,IAAA,IAAEC,EAAKnB,GAAMkB,EAAA,OACzCzB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,CAASwB,EAAIC,MAAM,aAAaC,KAAK,KAAK,OACxB,mBAAVrB,EAAuBA,EAAQ,OAAS,MAAS,IAAIA,MAFvDmB,EAGJ,SAVU,QAyCFlC,EAAOqC,IAuBX,MAGRjE,GACFkC,EAAAA,EAAAA,KAAA,KAAGM,UAAU,aAAYF,SAAC,+BAE1BJ,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,QAAQ,6BAGnBjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,MACN,C","sources":["pages/MyReports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoading } from '../redux/reducers/rootSlice';\r\nimport Loading from '../components/Loading';\r\nimport Empty from '../components/Empty';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport '../styles/doctorPrescriptions.css';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst MyReports = () => {\r\n  const [reports, setReports] = useState([]);\r\n  const [filteredReports, setFilteredReports] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  const [user] = useState(\r\n    localStorage.getItem(\"token\")\r\n      ? jwt_decode(localStorage.getItem(\"token\"))\r\n      : null\r\n  );\r\n\r\n  const fetchReports = async () => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const { data } = await axios.get(\"/predict/report\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      setReports(data?.data || []);\r\n      setFilteredReports(data?.data || []);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error fetching reports:', error);\r\n      setError('Failed to load reports');\r\n    } finally {\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\n  useEffect(() => { fetchReports(); }, []);\r\n\r\n  useEffect(() => {\r\n    if (reports.length > 0) {\r\n      const filtered = user?.isDoctor \r\n        ? reports.filter(report => \r\n            `${report.patient?.name || ''}`.toLowerCase().includes(searchTerm.toLowerCase())\r\n          )\r\n        : reports;\r\n      setFilteredReports(filtered);\r\n    }\r\n  }, [searchTerm, reports, user?.isDoctor]);\r\n\r\n  const renderFeatures = (features) => {\r\n    if (!features) return null;\r\n    \r\n    return (\r\n      <div className=\"features-section\">\r\n        <h4>Clinical Parameters</h4>\r\n        <div className=\"features-grid\">\r\n          {Object.entries(features).map(([key, value]) => (\r\n            <p key={key}>\r\n              <strong>{key.split(/(?=[A-Z])/).join(' ')}:</strong> \r\n              {typeof value === 'boolean' ? (value ? ' Yes' : ' No') : ` ${value}`}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"doctor-prescriptions-section\">\r\n        <h1 className=\"page-heading\">My Health Reports</h1>\r\n        \r\n        {user?.isDoctor && (\r\n          <div className=\"search-bar\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by patient name...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {error ? (\r\n          <p className=\"error-message\">{error}</p>\r\n        ) : filteredReports.length > 0 ? (\r\n          <div className=\"prescriptions-list\">\r\n            {filteredReports.map((report) => (\r\n              <div key={report._id} className=\"prescription-card\">\r\n                <h3 className=\"report-title\">\r\n                  {report.type === 'diabetes' ? 'Diabetes Risk Assessment' : 'COVID-19 Screening'}\r\n                </h3>\r\n                \r\n                <div className=\"report-header\">\r\n                  <p><strong>Date:</strong> {report.date} at {report.time}</p>\r\n                  <p><strong>Risk Score:</strong> {(report.prediction * 100).toFixed(2)}%</p>\r\n                  <p className={`result-${report.predictionResult}`}>\r\n                    <strong>Conclusion:</strong> {report.predictionResult === 1 ? 'Positive' : 'Negative'}\r\n                  </p>\r\n                </div>\r\n\r\n                {user?.isDoctor && report.patient && (\r\n                  <div className=\"patient-info\">\r\n                    <h4>Patient Details</h4>\r\n                    <p><strong>Name:</strong> {report.patient.name}</p>\r\n                    <p><strong>Email:</strong> {report.patient.contact?.email || 'Not provided'}</p>\r\n                    <p><strong>Phone:</strong> {report.patient.contact?.phone || 'Not provided'}</p>\r\n                  </div>\r\n                )}\r\n\r\n                {renderFeatures(report.features)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : searchTerm ? (\r\n          <p className=\"no-results\">No matching reports found</p>\r\n        ) : (\r\n          <Empty message=\"No reports available\" />\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyReports;"],"names":["MyReports","reports","setReports","useState","filteredReports","setFilteredReports","searchTerm","setSearchTerm","error","setError","dispatch","useDispatch","loading","useSelector","state","root","user","localStorage","getItem","jwt_decode","useEffect","async","setLoading","data","axios","get","headers","Authorization","console","fetchReports","length","filtered","isDoctor","filter","report","_report$patient","patient","name","toLowerCase","includes","_jsx","Loading","_jsxs","_Fragment","children","Navbar","className","type","placeholder","value","onChange","e","target","map","_report$patient$conta","_report$patient$conta2","features","date","time","prediction","toFixed","predictionResult","contact","email","phone","Object","entries","_ref","key","split","join","_id","Empty","message","Footer"],"sourceRoot":""}